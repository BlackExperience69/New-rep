import telebot
from telebot import types
import COVID19Py
import os
import random

AUTORS = ['–ù–∏–∫–æ–ª–∞–π –î.', '–ú–∞–∫—Å–∏–∫–æ–≤ –ú.']
SOVIET = ['–°–æ–±–ª—é–¥–∞–π—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –Ω–µ –º–µ–Ω–µ–µ 1.5 –º–µ—Ç—Ä–∞.', '–ú–æ–π—Ç–µ —Ä—É–∫–∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑, –µ—Å–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ –¥–æ–º–∞.', '–ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫–∞–º–∏.',
           '–ù–∞–¥–µ–≤–∞–π—Ç–µ –º–∞—Å–∫—É –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –Ω–∞ —É–ª–∏—Ü—É.', '–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≤–æ–∑–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –æ—Ç –ø–æ—Ö–æ–¥–æ–≤ –Ω–∞ —É–ª–∏—Ü—É.',
            '–¢—â–∞—Ç–µ–ª—å–Ω–æ –º–æ–π—Ç–µ —Ñ—Ä—É–∫—Ç—ã –∏ –æ–≤–æ—â–∏ –ø–µ—Ä–µ–¥ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º., –°–∞–º–æ—Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å –≤ —Ç–∞–∫–æ–µ –Ω–µ–ø—Ä–æ—Å—Ç–æ–µ –¥–ª—è –≤—Å–µ—Ö –≤—Ä–µ–º—è.',
            '–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–æ–º–∞., –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –º–µ–Ω—è–π—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏, —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∏—Ö —Å—Ç–∏—Ä–∞–π—Ç–µ –∏ —Ö–æ—Ä–æ—à–æ —Å—É—à–∏—Ç–µ.',
            '–ò–∑–±–µ–≥–∞–π—Ç–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç.'
        ]

covid19 = COVID19Py.COVID19()
bot = telebot.TeleBot('1137122161:AAHtp6Zr1FaLQxn9Yh0UcSWMpETF1Li0pck')

DIR = '–º–µ–º—ã'
STICK = '—Å—Ç–∏–∫–µ—Ä—ã'


@bot.message_handler(commands=['start'])
def start(message):
    stik = open((os.path.join(STICK, random.choice(os.listdir(STICK)))), 'rb')
    bot.send_sticker(message.chat.id, stik)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ :)")
    item2 = types.KeyboardButton("–î–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç")

    markup.add(item1, item2)

    send_message = f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b>\n –Ø <b>–õ—ë—Ö–∞</b> - –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å —Å–ª—É—Ö–∏ –æ Covid19 üòà\n" \
                   f"–Ø –æ–±—É—á–µ–Ω —Å–≤–æ–∏–º–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –¥–ª—è —Ç–µ–±—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º –≤ –ø–µ—Ä–µ—á–Ω–µ —Å—Ç—Ä–∞–Ω –Ω–∏–∂–µ.\n" \
                   f"–¢—ã, –º–æ–π –¥—Ä—É–≥üòé, –º–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ —Å—Ç—Ä–∞–Ω—É <u><b>(–Ω–∞ —Ä—É—Å—Å–∫–æ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ)</b></u> –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—Ä–∞–∑—ã."

    bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)

    keyboard = types.InlineKeyboardMarkup()

    key_world = types.InlineKeyboardButton(text='–ú–∏—Ä', callback_data='world')
    keyboard.add(key_world)

    key_rus = types.InlineKeyboardButton(text='–†–æ—Å—Å–∏—è', callback_data='rus')
    keyboard.add(key_rus)

    key_us = types.InlineKeyboardButton(text='–°–®–ê', callback_data='us')
    keyboard.add(key_us)

    key_it = types.InlineKeyboardButton(text='–ò—Ç–∞–ª–∏—è', callback_data='it')
    keyboard.add(key_it)

    key_es = types.InlineKeyboardButton(text='–ò—Å–ø–∞–Ω–∏—è', callback_data='res')
    keyboard.add(key_es)

    key_ca = types.InlineKeyboardButton(text='–ö–∞–Ω–∞–¥–∞', callback_data='ca')
    keyboard.add(key_ca)

    key_ch = types.InlineKeyboardButton(text='–ö–∏—Ç–∞–π', callback_data='ch')
    keyboard.add(key_ch)

    key_de = types.InlineKeyboardButton(text='–ì–µ—Ä–º–∞–Ω–∏—è', callback_data='de')
    keyboard.add(key_de)

    key_fr = types.InlineKeyboardButton(text='–§—Ä–∞–Ω—Ü–∏—è', callback_data='fr')
    keyboard.add(key_fr)

    key_se = types.InlineKeyboardButton(text='–®–≤–µ—Ü–∏—è', callback_data='se')
    keyboard.add(key_se)

    key_gb = types.InlineKeyboardButton(text='–ê–Ω–≥–ª–∏—è', callback_data='gb')
    keyboard.add(key_gb)

    bot.send_message(message.from_user.id, text='–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –æ Covid19:', reply_markup=keyboard)



@bot.message_handler(content_types=['text'])
def mess(message):
    final_message = ""
    country = ""
    flag = True
    get_message_bot = message.text.strip().lower()


    if message.chat.type == 'private':
        if message.text == '–ü–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ :)':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("Like))", callback_data='good')
            item2 = types.InlineKeyboardButton("Dislike((", callback_data='bad')

            markup.add(item1, item2)

            photo = open((os.path.join(DIR, random.choice(os.listdir(DIR)))), 'rb')
            bot.send_photo(message.chat.id, photo)

            send_message = f"–ö–∞–∫ —Ç–µ–±–µ?"
            bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)

            flag = False

        elif message.text == '–î–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("Like))", callback_data='good')
            item2 = types.InlineKeyboardButton("Dislike((", callback_data='bad')

            markup.add(item1, item2)

            send_message = F"{random.choice(SOVIET)}\n<b>{random.choice(AUTORS)}</b>"
            bot.send_message(message.chat.id, send_message, parse_mode='html')

            send_message = f"–ö–∞–∫ —Ç–µ–±–µ?"
            bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)

            flag = False

    if get_message_bot == '—Ä–æ—Å—Å–∏—è':
        location = covid19.getLocationByCountryCode("RU")
        country = '–†–æ—Å—Å–∏—è'

    elif get_message_bot == '—Å—à–∞' or get_message_bot == '–∞–º–µ—Ä–∏–∫–∞':
        location = covid19.getLocationByCountryCode("US")
        country = '–°–®–ê'

    elif get_message_bot == '–∫–∏—Ç–∞–π':
        location = covid19.getLocationByCountryCode("CN")
        country = '–ö–∏—Ç–∞–π'

    elif get_message_bot == '–∏—Ç–∞–ª–∏—è':
        location = covid19.getLocationByCountryCode("IT")
        country = '–ò—Ç–∞–ª–∏—è'

    elif get_message_bot == '–∏—Å–ø–∞–Ω–∏—è':
        location = covid19.getLocationByCountryCode("ES")
        country = '–ò—Å–ø–∞–Ω–∏—è'

    elif get_message_bot == '–≤–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è' or get_message_bot == '–∞–Ω–≥–ª–∏—è':
        location = covid19.getLocationByCountryCode("GB")
        country = '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è'

    elif get_message_bot == '—Ñ—Ä–∞–Ω—Ü–∏—è':
        location = covid19.getLocationByCountryCode("FR")
        country = '–§—Ä–∞–Ω—Ü–∏—è'

    elif get_message_bot == '–≥–µ—Ä–º–∞–Ω–∏—è':
        location = covid19.getLocationByCountryCode("DE")
        country = '–ì–µ–º–∞–Ω–∏—è'

    elif get_message_bot == '–∫–∞–Ω–∞–¥–∞':
        location = covid19.getLocationByCountryCode("CA")
        country = '–ö–∞–Ω–∞–¥–∞'

    elif get_message_bot == '—à–≤–µ—Ü–∏—è':
        location = covid19.getLocationByCountryCode("SE")
        country = '–®–≤–µ—Ü–∏—è'

    elif '–∑–∞–¥–∞—á–∞' in get_message_bot or '—Ç—ã' in get_message_bot:
        send_message = f"–Ø <b>–õ—ë—Ö–∞</b> - –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å —Å–ª—É—Ö–∏ –æ Covid19 üòà\n" \
                       f"–Ø –æ–±—É—á–µ–Ω —Å–≤–æ–∏–º–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –¥–ª—è —Ç–µ–±—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º –≤ –ø–µ—Ä–µ—á–Ω–µ —Å—Ç—Ä–∞–Ω –Ω–∏–∂–µ.\n" \
                       f"–¢—ã, –º–æ–π –¥—Ä—É–≥üòé, –º–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ —Å—Ç—Ä–∞–Ω—É <u><b>(–Ω–∞ —Ä—É—Å—Å–∫–æ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ)</b></u> –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—Ä–∞–∑—ã."

        bot.send_message(message.chat.id, send_message, parse_mode='html')

        flag = False

    elif '–ø—Ä–∏–≤' in get_message_bot or '–∑–¥—Ä–∞–≤—Å—Ç' in get_message_bot:
        stik = open((os.path.join(STICK, random.choice(os.listdir(STICK)))), 'rb')
        bot.send_sticker(message.chat.id, stik)
        keyboard = types.InlineKeyboardMarkup()

        key_world = types.InlineKeyboardButton(text='–ú–∏—Ä', callback_data='world')
        keyboard.add(key_world)

        key_rus = types.InlineKeyboardButton(text='–†–æ—Å—Å–∏—è', callback_data='rus')
        keyboard.add(key_rus)

        key_us = types.InlineKeyboardButton(text='–°–®–ê', callback_data='us')
        keyboard.add(key_us)

        key_it = types.InlineKeyboardButton(text='–ò—Ç–∞–ª–∏—è', callback_data='it')
        keyboard.add(key_it)

        key_es = types.InlineKeyboardButton(text='–ò—Å–ø–∞–Ω–∏—è', callback_data='res')
        keyboard.add(key_es)

        key_ca = types.InlineKeyboardButton(text='–ö–∞–Ω–∞–¥–∞', callback_data='ca')
        keyboard.add(key_ca)

        key_ch = types.InlineKeyboardButton(text='–ö–∏—Ç–∞–π', callback_data='ch')
        keyboard.add(key_ch)

        key_de = types.InlineKeyboardButton(text='–ì–µ—Ä–º–∞–Ω–∏—è', callback_data='de')
        keyboard.add(key_de)

        key_fr = types.InlineKeyboardButton(text='–§—Ä–∞–Ω—Ü–∏—è', callback_data='fr')
        keyboard.add(key_fr)

        key_se = types.InlineKeyboardButton(text='–®–≤–µ—Ü–∏—è', callback_data='se')
        keyboard.add(key_se)

        key_gb = types.InlineKeyboardButton(text='–ê–Ω–≥–ª–∏—è', callback_data='gb')
        keyboard.add(key_gb)

        bot.send_message(message.from_user.id, text='–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –æ Covid19:', reply_markup=keyboard)

        flag = False

    elif '—Å–ø–∞—Å–∏–±–æ' in get_message_bot:
        final_message = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞))\n–Ø –¥–ª—è —ç—Ç–æ–≥–æ –∏ —Å–æ–∑–¥–∞–Ω ;)"


    elif '–º–∏—Ä' in get_message_bot:
        location = covid19.getLatest()
        final_message = f"<u>–ü–æ –≤—Å–µ–º—É –º–∏—Ä—É:</u>\n<b>–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: </b>{location['confirmed']:,}\n" \
                        f"<b>–°–º–µ—Ä—Ç–µ–π: </b>{location['deaths']:,}"

    else:
        final_message = f"–ü—Ä–æ–∏–∑–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–≤–∏–ª—å–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞\n–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é :("

    if flag:
        if final_message == "":
            date = location[0]['last_updated'].split("T")
            time = date[1].split(".")
            final_message = f"<u>–ü–æ —Å—Ç—Ä–∞–Ω–µ: <b>{country}</b></u>\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {location[0]['country_population']:,}\n" \
                            f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {date[0]} {time[0]}\n<u>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:</u>\n<b>" \
                            f"–ë–æ–ª—å–Ω—ã—Ö: </b>{location[0]['latest']['confirmed']:,}\n<b>–°–º–µ—Ä—Ç–µ–π: </b>" \
                            f"{location[0]['latest']['deaths']:,}"

        bot.send_message(message.chat.id, final_message, parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:

        if call.data == 'good' or call.data == 'bad':
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')

            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ö–∞–∫ —Ç–∞–∫ —Ç–æ? üò¢')

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö–∞–∫ —Ç–µ–±–µ?",
                                    reply_markup=None)

            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            text="–°–ü–ê–°–ò–ë–û –ó–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô")

        else:
            print(1)
            final_message = ''
            country = ''

            if call.data == "rus":
                location = covid19.getLocationByCountryCode("RU")
                country = '–†–æ—Å—Å–∏—è'

            elif call.data == "us":
                location = covid19.getLocationByCountryCode("US")
                country = '–°–®–ê'

            elif call.data == "ch":
                location = covid19.getLocationByCountryCode("CN")
                country = '–ö–∏—Ç–∞–π'

            elif call.data == "it":
                location = covid19.getLocationByCountryCode("IT")
                country = '–ò—Ç–∞–ª–∏—è'

            elif call.data == "es":
                location = covid19.getLocationByCountryCode("ES")
                country = '–ò—Å–ø–∞–Ω–∏—è'

            elif call.data == "gb":
                location = covid19.getLocationByCountryCode("GB")
                country = '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è'

            elif call.data == "fr":
                location = covid19.getLocationByCountryCode("FR")
                country = '–§—Ä–∞–Ω—Ü–∏—è'

            elif call.data == "de":
                location = covid19.getLocationByCountryCode("DE")
                country = '–ì–µ—Ä–º–∞–Ω–∏—è'

            elif call.data == "ca":
                location = covid19.getLocationByCountryCode("CA")
                country = '–ö–∞–Ω–∞–¥–∞'

            elif call.data == "se":
                location = covid19.getLocationByCountryCode("SE")
                country = '–®–≤–µ—Ü–∏—è'

            elif call.data == "world":
                location = covid19.getLatest()
                final_message = f"<u>–ü–æ –≤—Å–µ–º—É –º–∏—Ä—É:</u>\n<b>–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: </b>{location['confirmed']:,}\n" \
                                f"<b>–°–º–µ—Ä—Ç–µ–π: </b>{location['deaths']:,}"

            if final_message == "":
                date = location[0]['last_updated'].split("T")
                time = date[1].split(".")
                final_message = f"<u>–ü–æ —Å—Ç—Ä–∞–Ω–µ: <b>{country}</b></u>\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {location[0]['country_population']:,}\n" \
                            f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {date[0]} {time[0]}\n<u>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:</u>\n<b>" \
                            f"–ë–æ–ª—å–Ω—ã—Ö: </b>{location[0]['latest']['confirmed']:,}\n<b>–°–º–µ—Ä—Ç–µ–π: </b>" \
                            f"{location[0]['latest']['deaths']:,}"

            bot.send_message(call.message.chat.id, final_message, parse_mode='html')


    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
