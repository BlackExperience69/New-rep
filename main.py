import telebot
from telebot import types
import COVID19Py
import os
import random

AUTORS = ['–ù–∏–∫–æ–ª–∞–π –î.', '–ú–∞–∫—Å–∏–∫–æ–≤ –ú.']
SOVIET = ['–º–æ–π—Ç–µ –ø–æ–ø—É –ø–∞—Ü–∞–Ω—ã, –ª–∏—à—å –±—ã —Ü–µ–ª—ã –±—ã —à—Ç–∞–Ω—ã', '–∫–æ—Ä–µ–Ω—å —Å–º–æ—Ç—Ä–∏ –≤–Ω—É—Ç—Ä—å', '–ø–∏—Å–∫–æ-–≤–∏—Ç—Å–∞']

covid19 = COVID19Py.COVID19()
bot = telebot.TeleBot('1137122161:AAHtp6Zr1FaLQxn9Yh0UcSWMpETF1Li0pck')

DIR = '–º–µ–º—ã'
MEM = False


@bot.message_handler(commands=['start'])
def start(message):
    stik = open('—Å—Ç–∏–∫–µ—Ä—ã/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, stik)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ :)")
    item2 = types.KeyboardButton("–î–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç")

    markup.add(item1, item2)

    send_message = f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b>\n –Ø <b>–°–µ—Ä—ë–∂–∞</b> - –±–æ—Ç –∏ –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–π –∫—Ä–æ–ª–∏–∫ —Å–≤–æ–∏—Ö" \
                   f"—Å–æ–∑–¥–∞—Ç–µ–ª–µ–π.\n –ú–æ–µ–π –≥–ª–∞–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π —è–≤–ª—è–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –æ Covid19 –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω"

    bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)



@bot.message_handler(content_types=['text'])
def mess(message):
    global mem
    mem = False
    final_message = ""
    flag = True
    get_message_bot = message.text.strip().lower()


    if message.chat.type == 'private':
        if message.text == '–ü–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ :)':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("Like))", callback_data='good')
            item2 = types.InlineKeyboardButton("Dislike((", callback_data='bad')

            markup.add(item1, item2)

            photo = open((os.path.join(DIR, random.choice(os.listdir(DIR)))), 'rb')
            bot.send_photo(message.chat.id, photo)

            send_message = f"–ö–∞–∫ —Ç–µ–±–µ?"
            bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)

            flag = False
            mem = True

        elif message.text == '–î–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            send_message = F"{random.choice(SOVIET)}\n<b>{random.choice(AUTORS)}</b>"
            bot.send_message(message.chat.id, send_message, parse_mode='html')

            send_message = f"–ö–∞–∫ —Ç–µ–±–µ?"
            bot.send_message(message.chat.id, send_message, parse_mode='html', reply_markup=markup)

            flag = False

    if get_message_bot == '—Ä–æ—Å—Å–∏—è':
        location = covid19.getLocationByCountryCode("RU")

    elif get_message_bot == '—Å—à–∞' or get_message_bot == '–∞–º–µ—Ä–∏–∫–∞':
        location = covid19.getLocationByCountryCode("US")

    elif get_message_bot == '–∫–∏—Ç–∞–π':
        location = covid19.getLocationByCountryCode("CN")

    elif get_message_bot == '–∏—Ç–∞–ª–∏—è':
        location = covid19.getLocationByCountryCode("IT")

    elif get_message_bot == '–∏—Å–ø–∞–Ω–∏—è':
        location = covid19.getLocationByCountryCode("ES")

    elif get_message_bot == '–≤–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è' or get_message_bot == '–∞–Ω–≥–ª–∏—è':
        location = covid19.getLocationByCountryCode("GB")

    elif get_message_bot == '—Ñ—Ä–∞–Ω—Ü–∏—è':
        location = covid19.getLocationByCountryCode("FR")

    elif get_message_bot == '–≥–µ—Ä–º–∞–Ω–∏—è':
        location = covid19.getLocationByCountryCode("DE")

    elif get_message_bot == '–∫–∞–Ω–∞–¥–∞':
        location = covid19.getLocationByCountryCode("CA")

    elif get_message_bot == '—à–≤–µ—Ü–∏—è':
        location = covid19.getLocationByCountryCode("SE")

    elif '–∑–∞–¥–∞—á–∞' in get_message_bot or '—Ç—ã' in get_message_bot:
        send_message = f"–Ø –°–µ—Ä—ë–∂–∞ - –±–æ—Ç –∏ –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–π –∫—Ä–æ–ª–∏–∫ " \
                       f"—Å–≤–æ–∏—Ö —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π.\n" \
                       f"–ú–æ–µ–π –≥–ª–∞–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π —è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–∏—Ç—å —Ç–µ–±–µ –≤—Å—ë —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å Covid19 –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º –≤ —ç—Ç–æ–º –º–∏—Ä–µ."

        bot.send_message(message.chat.id, send_message, parse_mode='html')
        final_message = "–ü–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ)"

    else:
        location = covid19.getLatest()
        final_message = f"<u>–ü–æ –≤—Å–µ–º—É –º–∏—Ä—É:</u>\n<b>–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: </b>{location['confirmed']:,}\n" \
                        f"<b>–°–º–µ—Ä—Ç–µ–π: </b>{location['deaths']:,}\n" \
                        f"<b>—ã–∑–¥–æ—Ä–æ–≤–µ–≤—à–∏—Ö: </b>{location['recovered']:,}"

    if flag:
        if final_message == "":
            date = location[0]['last_updated'].split("T")
            time = date[1].split(".")
            final_message = f"<u>Country Data:</u>\nPopulation: {location[0]['country_population']:,}\n" \
                            f"Last updated: {date[0]} {time[0]}\nLatest data:\n<b>" \
                            f"Sick: </b>{location[0]['latest']['confirmed']:,}\n<b>Died: </b>" \
                            f"{location[0]['latest']['deaths']:,}"

        bot.send_message(message.chat.id, final_message, parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global mem
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')

            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ö–∞–∫ —Ç–∞–∫ —Ç–æ? üò¢')

            if mem:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö–∞–∫ —Ç–µ–±–µ?",
                    reply_markup=None)
            else:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö–∞–∫ —Ç–µ–±–µ?",
                    reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–°–ü–ê–°–ò–ë–û –ó–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô")

    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
